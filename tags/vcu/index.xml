<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>VCU on Hank Tech Lab</title><link>https://hanketgithub.github.io/tags/vcu/</link><description>Recent content in VCU on Hank Tech Lab</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 01 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://hanketgithub.github.io/tags/vcu/index.xml" rel="self" type="application/rss+xml"/><item><title>VCU 開發進度總結 — 2025-08-01</title><link>https://hanketgithub.github.io/tech/vcu_progress/</link><pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate><guid>https://hanketgithub.github.io/tech/vcu_progress/</guid><description>編譯步驟： # 設定 cross compile 環境 source ~/VEGA2200/trunk/xilinx_sdk_r5_vega6000/sdk/environment-setup-cortexa72-cortexa53-xilinx-linux # 進入正確版本的 source tree cd ~/vcu-ctrl-sw-xlnx_rel_v2025.1 # 編譯 make -j8 # 確認輸出檔案型態 file bin/AL_Encoder.exe 更新概要（2025-08-04） 格式轉換.
格式轉換（2025-08-04） CYuvSrcConv::ConvertSrcBuf(AL_TBuffer const *pSrcIn, AL_TBuffer *pSrcOut)
根據 pSrcOut 的 FOURCC，選擇對應的轉換 case
例如，若輸出為 NV12，將執行：
case FOURCC(NV12): return convertToNV12(pSrcIn, tFourCCIn, pSrcOut); convertToNV12(AL_TBuffer const* pSrcIn, TFourCC inFourCC, AL_TBuffer* pSrcOut)
根據輸入格式 inFourCC，選擇對應的轉換邏輯，例如：
case FOURCC(I420): return I420_To_NV12(pSrcIn, pSrcOut); 最終將透過對應函式將輸入格式轉為 NV12。
Send Input Frame Trace（2025-08-01） exe_encoder 主邏輯在 SafeChannelMain() 裡：
while (...) { LayerResources::SendInput(.</description></item></channel></rss>